// Define grid parameters
@columns:	12;
@gutters:	1.5vw;

// Box sizing reset, allows for row padding
* {
	box-sizing: border-box;
}

.row {
	margin: 0;
	clear: both;
	padding: 0;
	overflow: hidden;
	// Create IE7&8 gutters. Only needed if gutter 
	// value is in modern units.
	margin-bottom: 2%\9 !important;
	margin-right: -@gutters;
}

// Create mixin.
// Mixin allows you to make any element a fraction width,
// for example .col(3/5); will make an element width 60%.
.col(@x;@y;@z:0;) {
	float: left;
	margin: 0 @gutters @gutters 0;
	// Remove bottom margin from the last span in the last
	// nested row, to keep vertical spacing consistent.
	& *[class*="row"]:last-child *[class*="span"]:last-child {
		margin-bottom: 0;
	}
	// Create a ruleset out of the grid values so they can
	// be easily re-used and maintained.
	@grid-ruleset: {
		// Create calc grid for modern browsers.
		width: calc(percentage((@x/@y)) ~"-"@gutters);

		// Create IE8- fallback. Due to lack of calc() support
		// columns use an extra 2% as a gutter.
		// Remove this if only supporting IE9+.
		width: unit(percentage((@x/@y)) - 2, ~"%\9");
		// Create IE7 fallback. IE7 has a hard time with
		// decimal places in percentages.
		// Remove this if only supporting IE9+.
		*width: unit(floor(percentage((@x/@y)) - 2), ~"%\9 !important");
		margin-right: 2%\9 !important;

		// Remove bottom margin from all spans in the last nested
		// row, to keep vertical spacing consistent.
		& > *[class*="row"]:last-child *[class*="span"] {
			margin-bottom: 0;
		}
	};
	// When the breakpoint is undefined, simply add the
	// ruleset without a media query.
	& when (@z = 0) {
		@grid-ruleset();
	}
	// If the breakpoint is defined, add the ruleset inside
	// a media query at that size.
	& when (@z > 0) {
		width: calc(100% ~"-"@gutters);
		@media (min-width: @z){
			@grid-ruleset();
		}
	}
}

// Create loop that iterate through the columns. This
// can be removed if you don't need .span classes.
.grid-loop (@i) when (@i > 0) {
	// Rename this to change column class names.
	.span@{i} {
		.col(@i,@columns,50em);
	}
	.grid-loop(@i - 1);
}

// Create a class for each column.
.grid-loop(@columns);